(()=>{"use strict";var e={d:(t,a)=>{for(var s in a)e.o(a,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:a[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{A:()=>n});class t{constructor(e){this.tarea=e,this.id=(new Date).getTime(),this.completado=!1,this.fecha=new Date}}const a=document.querySelector(".todo-list");document.querySelector("strong").innerHTML=0;const s=document.querySelector(".new-todo"),r=()=>{const e=n.listaTareas.filter((e=>!1===e.completado));document.querySelector("strong").innerHTML=e.length},l=()=>{0===n.listaTareas.length?document.querySelector(".footer").classList.add("hidden"):document.querySelector(".footer").classList.remove("hidden")},o=()=>{n.listaTareas.filter((e=>!0===e.completado)).length>0?document.querySelector(".clear-completed").classList.remove("hidden"):document.querySelector(".clear-completed").classList.add("hidden")};s.addEventListener("keypress",(e=>{if("Enter"===e.key&&s.value.trim().length>0){let e=new t(s.value);n.anadirTarea(e),n.tareasHTML(e,a),s.value="",n.guardarLocal(),r(),l()}})),a.addEventListener("click",(e=>{const t=e.target.parentElement.parentElement,s=t.dataset.id;"button"===e.target.localName&&(n.eliminarTarea(s,t,a),n.guardarLocal(),r(),l()),"input"===e.target.localName&&(n.marcarCompletado(s),t.classList.toggle("completed"),n.guardarLocal(),r(),l(),o())})),a.addEventListener("dblclick",(e=>{const t=e.target.parentElement.parentElement,a=parseInt(t.getAttribute("data-id"));if("label"===e.target.localName&&"completed"!==t.getAttribute("class")){const t=e.target.innerHTML,s=e.target;s.innerHTML=`<input type="text" class="edito" value="${t}">`;const r=document.querySelector(".edito").value;window.addEventListener("click",(e=>{const t=e.target.localName,a=e.target.getAttribute("class");"input"==t&&"edito"===a||(s.innerHTML=`${r}`)})),document.querySelector(".edito").addEventListener("keypress",(e=>{"Enter"===e.key&&(n.guardarLocal(r,a),s.innerHTML=`${r}`)}))}}));const i=document.querySelectorAll(".filtro");i.forEach((e=>{e.addEventListener("click",(e=>{i.forEach((e=>{e.classList.remove("selected")})),e.target.classList.add("selected");const t=e.target.text;for(const e of a.children)switch(t){case"Pendientes":e.classList.contains("completed")?e.classList.add("hidden"):e.classList.remove("hidden");break;case"Completados":e.classList.contains("completed")?e.classList.remove("hidden"):e.classList.add("hidden");break;case"Todos":e.classList.contains("completed"),e.classList.remove("hidden")}}))})),document.querySelector(".clear-completed").addEventListener("click",(()=>{n.eliminarCompletados();for(let e=a.children.length-1;e>=0;e--){const t=a.children[e];t.classList.contains("completed")&&t.remove()}n.guardarLocal("","",1),l(),o()}));const c=document.querySelector(".todo-list"),n=new class{constructor(){this.listaTareas=[],this.key="tarea"}tareasHTML(e,t){const a=`<li class="${e.completado?"completed":""}" data-id="${e.id}">\n        <div class="view">\n            <input class="toggle" type="checkbox" ${e.completado?"checked":""}>\n            <label>${e.tarea}</label>\n            <button class="destroy"></button>\n        </div>\n        <input class="edit" value="Create a TodoMVC template">\n        </li>`;t.innerHTML+=a}anadirTarea(e){this.listaTareas.push(e)}eliminarTarea(e,t,a){this.listaTareas=this.listaTareas.filter((t=>e!=t.id)),a.removeChild(t)}eliminarCompletados(){this.listaTareas=this.listaTareas.filter((e=>!1===e.completado))}marcarCompletado(e){for(const t of this.listaTareas)if(t.id==e){t.completado=!t.completado;break}}guardarLocal(e,t,a){e&&t?this.listaTareas.forEach((a=>{a.id===t&&(a.tarea=e,localStorage.setItem(this.key,JSON.stringify(this.listaTareas)))})):localStorage.setItem(this.key,JSON.stringify(this.listaTareas)),localStorage.setItem(this.key,JSON.stringify(this.listaTareas))}cargarLocal(e){localStorage.getItem(this.key)&&(this.listaTareas=JSON.parse(localStorage.getItem(this.key)),this.listaTareas.forEach((t=>{this.tareasHTML(t,e)})))}};n.cargarLocal(c),r(),l(),o()})();
//# sourceMappingURL=665607a27b04941a197e.bundle.js.map